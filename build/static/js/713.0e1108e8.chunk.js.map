{"version":3,"file":"static/js/713.0e1108e8.chunk.js","mappings":"6HAAA,MACA,EADeA,uB,8GCOf,MAgGA,EAhGcC,KAGZ,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,GAKjCO,IAJWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAGAC,EAAAA,GAmCjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAmEC,MAAO,CAAEC,gBAAiB,iDAAkDC,SAAA,EAC5JC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8DACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sFAAqFG,SAAA,EAClGC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iDAAgDG,SAAC,aAC/DJ,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAYK,SArCdC,UAMlB,GALAC,EAAEC,iBACFd,GAAW,GACXF,EAAW,KAGNN,IAAaG,EAGhB,OAFAG,EAAW,4CACXE,GAAW,GAIb,IACE,MAAMe,QAAiBC,EAAAA,EAAMC,KAAK,GAAGhB,gBAAyB,CAC5DT,WACAG,YACC,CAAEuB,iBAAiB,IAGO,SAAzBH,EAASI,KAAKC,QAChBtB,EAAW,oBACXuB,OAAOC,SAASC,KAAO,yCAEvBzB,EAAWiB,EAASI,KAAKtB,SAAW,eAExC,CAAE,MAAO2B,GACP1B,EAAW,mBACb,CAAC,QACCE,GAAW,EACb,GAQsDS,SAAA,EAChDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUG,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEe,KAAK,OACLC,GAAG,WACHC,MAAOnC,EACPoC,SAAWf,GAAMpB,EAAYoB,EAAEgB,OAAOF,OACtCrB,UAAU,qKACVwB,YAAY,cAEdpB,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,WAAWzB,UAAU,2EAA0EG,SAAC,iBAKjHJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUG,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEe,KAAK,WACLC,GAAG,WACHC,MAAOhC,EACPiC,SAAWf,GAAMjB,EAAYiB,EAAEgB,OAAOF,OACtCrB,UAAU,qKACVwB,YAAY,cAEdpB,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,WAAWzB,UAAU,2EAA0EG,SAAC,iBAKjHC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLnB,UAAU,6JAA4JG,SAErKV,EAAU,gBAAkB,eAKlCF,IAAWa,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,8BAA6BG,SAAEZ,SAExD,C","sources":["admin/assets/constant.js","admin/assets/login/Login.jsx"],"sourcesContent":["const server = process.env.REACT_APP_SERVER || 'http://localhost:8000';\r\nexport default server;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setAuthToken } from '../../reduxStore/auth/authSlice';\r\nimport server from '../constant';\r\n\r\nconst Login = () => {\r\n\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Track loading state\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const serverUrl =server;\r\n\r\n \r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);  // Start loading when the request begins\r\n    setMessage(\"\");  // Reset message\r\n  \r\n    // Basic form validation\r\n    if (!username || !password) {\r\n      setMessage(\"Username and Password are required!\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await axios.post(`${serverUrl}/admin/login`, {\r\n        username,\r\n        password,\r\n      }, { withCredentials: true });\r\n  \r\n     \r\n      if (response.data.status === 'true') {\r\n        setMessage(\"Login successful\");\r\n        window.location.href = \"http://localhost:3000/admin/dashboard\"; \r\n      } else {\r\n        setMessage(response.data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error logging in');\r\n    } finally {\r\n      setLoading(false);  // End loading when the request finishes\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-cover bg-center\" style={{ backgroundImage: \"url('/images/background/adminBackground.jpg')\" }}>\r\n      <div className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"></div>\r\n      <div className=\"relative w-full max-w-md p-10 space-y-8 bg-white bg-opacity-20 shadow-xl rounded-lg\">\r\n        <h2 className=\"text-3xl font-bold text-center text-white mb-6\">Sign In</h2>\r\n        <form className=\"space-y-8\" onSubmit={handleLogin}>\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"peer w-full border-b-2 border-transparent bg-transparent text-white font-bold focus:outline-none focus:ring-0 focus:border-white placeholder-transparent py-3 px-4\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <label htmlFor=\"username\" className=\"absolute left-4 top-[-10px] text-white text-sm font-bold px-1 rounded-md\">\r\n              Username\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"peer w-full border-b-2 border-transparent bg-transparent text-white font-bold focus:outline-none focus:ring-0 focus:border-white placeholder-transparent py-3 px-4\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <label htmlFor=\"password\" className=\"absolute left-4 top-[-10px] text-white text-sm font-bold px-1 rounded-md\">\r\n              Password\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full py-4 mt-6 font-bold bg-blue-500 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-300 text-white\"\r\n            >\r\n              {loading ? 'Logging in...' : 'Login'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {message && <div className=\"text-center text-white mt-4\">{message}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["process","Login","username","setUsername","useState","password","setPassword","message","setMessage","loading","setLoading","serverUrl","useDispatch","useNavigate","server","_jsxs","className","style","backgroundImage","children","_jsx","onSubmit","async","e","preventDefault","response","axios","post","withCredentials","data","status","window","location","href","error","type","id","value","onChange","target","placeholder","htmlFor"],"sourceRoot":""}